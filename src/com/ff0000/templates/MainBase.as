package com.ff0000.templates {	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.IOErrorEvent;	import flash.display.MovieClip;	import flash.display.SimpleButton;	import flash.display.Loader;	import flash.system.LoaderContext;	import flash.net.URLRequest;	import flash.net.navigateToURL;	import flash.system.Security;	import flash.system.SecurityDomain;	import flash.system.ApplicationDomain;	import flash.utils.setTimeout;		import com.greensock.TweenLite;	import com.greensock.easing.Expo;		import com.ff0000.utils.zwrap.ZWrap;	import com.ff0000.utils.zdate.ZDate;	public class MainBase extends MovieClip {		// -- PUBLIC VARS TO BE OVERRIDDEN --------------------------------------------------		public var debugMode:Boolean;		public var serverURL:String;		public var externalSWF:String;		public var loadDelay:Number;				private var _defaultClickTag:String;		public function set defaultClickTag( $_value:String ):void {			_defaultClickTag = $_value;		}		public function get defaultClickTag():String {			return flashVars.clickTag ? flashVars.clickTag : _defaultClickTag		}		// -- PRIVATE VARS ------------------------------------------------------------------		private var flashVars:Object;		private var externalURL:String;		// -- ON STAGE ----------------------------------------------------------------------		public var exit_btn:SimpleButton;		public var external_mc:MovieClip;		public var loader_mc:MovieClip;								// constructor		public function MainBase() {			Security.allowDomain('*');			Security.allowInsecureDomain("*");			prepareZWrap();			addEventListener( Event.ADDED_TO_STAGE, handleAddedToStage );			stop();		}				protected function prepareZWrap():void {			ZWrap.get().classes.addClass( ZDate );			ZWrap.get().classes.addClass( TweenLite );		}				protected function handleAddedToStage( $_e:Event ):void {			removeEventListener( Event.ADDED_TO_STAGE, handleAddedToStage );			flashVars = stage.loaderInfo.parameters;			externalURL = debugMode ? externalSWF : serverURL + externalSWF;						// trace out settings			trace( '-- RED POLITE AD SETTINGS --' );			trace( "debugMode: 	\t" + debugMode );			trace( "externalURL: \t" + externalURL );			trace( '----------------------------' );						// config stage			stage.frameRate = 40;			stage.quality 	= "BEST";						// load			exit_btn.addEventListener( MouseEvent.CLICK, handleClick );			setTimeout( loadExternal, loadDelay*1000, externalURL );			showLoader();		}		// -- EXTERNAL LOAD -------------------------------------------------		protected function loadExternal( $_filename:String ):void {			trace(this,'loadExternal()');			var _loader:Loader = new Loader();			_loader.contentLoaderInfo.addEventListener( Event.COMPLETE, handleLoadComplete );			_loader.contentLoaderInfo.addEventListener( IOErrorEvent.IO_ERROR, handleLoadError );			if( Security.sandboxType == Security.REMOTE ) {				var _context:LoaderContext = new LoaderContext();				_context.applicationDomain = ApplicationDomain.currentDomain;				_context.securityDomain = SecurityDomain.currentDomain;				_loader.load( new URLRequest( $_filename ), _context );			}			else {				_loader.load( new URLRequest( $_filename ));			}		}		protected function handleLoadError( $_e:Event ):void {			trace(this,'handleLoadError');			gotoAndStop('fail');		}		protected function handleLoadComplete( $_e:Event ):void {			trace(this,'handleLoadComplete');			$_e.target.removeEventListener( Event.COMPLETE, handleLoadComplete );			hideLoader();			var _external:MovieClip = $_e.target.content as MovieClip;			_external.addEventListener( 'fail', handleLoadError );			_external.defaultClickTag = defaultClickTag;			_external.zwrapClasses = ZWrap.get().classes;			external_mc.addChild( _external );		}			protected function showLoader() {			TweenLite.from( loader_mc, 1, { alpha:0, delay:.5, ease:Expo.easeInOut });			TweenLite.from( loader_mc.spin_mc, 1, { x:0, delay:.5, ease:Expo.easeInOut });			TweenLite.from( loader_mc.espn_mc, 1, { x:0, delay:.5, ease:Expo.easeInOut });		}		protected function hideLoader() {			TweenLite.to( loader_mc, .2, { alpha:0, ease:Expo.easeOut });			TweenLite.to( loader_mc.spin_mc, .2, { x:0, ease:Expo.easeOut });			TweenLite.to( loader_mc.espn_mc, .2, { x:0, ease:Expo.easeOut });		}					// -- CLICK -------------------------------------------------		function handleClick( $_e:MouseEvent=null ):void {			trace( this, 'handleClick' );			navigateToURL( new URLRequest( defaultClickTag ), "_blank" );		}	}	}